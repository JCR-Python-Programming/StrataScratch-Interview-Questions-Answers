Find the cheapest and the most expensive variety in each region. Output the region along with the corresponding most expensive and the cheapest variety.

SQL: 
-----------------------------------------
WITH merged AS (
SELECT region_1 AS region, 
       variety, 
       price
    FROM winemag_p1 UNION ALL 
SELECT region_2 AS region, 
       variety, 
       price
    FROM winemag_p1), 

rankings AS (
SELECT region, 
       variety, 
       price, 
       ROW_NUMBER() OVER (PARTITION BY region 
                            ORDER BY price ASC) AS cheap_rank, 
       ROW_NUMBER() OVER (PARTITION BY region 
                            ORDER BY price DESC) AS expensive_rank 
    FROM merged
WHERE region IS NOT NULL
    AND price IS NOT NULL) 

SELECT region, 
       MAX(CASE WHEN cheap_rank = 1 THEN variety END) AS cheapest_wine_variety, 
       MAX(CASE WHEN expensive_rank = 1 THEN variety END) AS most_expensive_variety 
    FROM rankings
WHERE cheap_rank = 1 
    OR expensive_rank = 1  
GROUP BY region 
ORDER BY region ASC

PYTHON: 
-----------------------------------------
winemag_p1.head()

w1 = pd.DataFrame(winemag_p1, columns = ['region_1', 'variety', 'price']) 

w2 = w1 = pd.DataFrame(winemag_p1, columns = ['region_2', 'variety', 'price']) 

df = pd.concat([w1, w2]).rename(columns={'region_2': 'region'})

df = df.drop_duplicates().dropna()

df['expensive_rank'] = df.groupby('region')['price'].rank(method='dense', ascending=False)

df['cheapest_rank'] = df.groupby('region')['price'].rank(method='dense', ascending=True)

expensive_df = df[df['expensive_rank'] == 1]
[['region','variety']]

cheapest_df == df[df['cheapest_rank'] == 1][['region', 'variety']]

result = pd.merge(expensive_df, cheapest_df, on='region').sort_values('region')


